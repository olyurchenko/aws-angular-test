name: Deploy Angular App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build -- --configuration=production

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug AWS setup
        run: |
          echo "=== AWS CLI Version ==="
          aws --version
          echo "=== AWS Identity ==="
          aws sts get-caller-identity
          echo "=== S3 Bucket Check ==="
          aws s3 ls s3://${{ secrets.BUCKET_ID }}

      - name: List build files
        run: |
          echo "=== Build Directory Contents ==="
          ls -la dist/
          echo "=== Total size ==="
          du -sh dist/

      - name: Clear S3 bucket manually (no --recursive)
        run: |
          echo "=== Listing S3 objects ==="
          aws s3api list-objects-v2 --bucket ${{ secrets.BUCKET_ID }} --query 'Contents[].Key' --output text | tr '\t' '\n' > objects_to_delete.txt
          echo "=== Deleting each object ==="
          while read key; do
            aws s3api delete-object --bucket ${{ secrets.BUCKET_ID }} --key "$key"
          done < objects_to_delete.txt
          echo "=== S3 bucket cleared successfully ==="

      - name: Deploy to S3
        run: |
          echo "=== Starting S3 sync ==="
          aws s3 sync ./dist/ s3://${{ secrets.BUCKET_ID }}
          echo "=== S3 sync completed successfully ==="

      - name: Invalidate CloudFront cache
        run: |
          echo "=== Invalidating CloudFront cache ==="
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
          echo "=== CloudFront invalidation completed ==="

      - name: Deployment summary
        run: |
          echo "=== Deployment Summary ==="
          echo "âœ… Build completed"
          echo "âœ… S3 bucket cleared"
          echo "âœ… Files uploaded to S3"
          echo "âœ… CloudFront cache invalidated"
          echo "ðŸŽ‰ Deployment successful!"
